name: SonarCloud
on:
  push:
    paths-ignore:
    - 'docs/**'
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build:
    name: Scan
    runs-on: windows-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Set up .NET 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all revisions
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install minver
        run: dotnet tool install --global minver-cli
      - name: Set up .NET 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100-preview.2.21155.3
      - name: Restore Packages
        run: dotnet restore
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          $sonarProjectVersion = minver
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"mysql-net_MySqlConnector" /o:"mysql-net" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /v:"$sonarProjectVersion"
          dotnet build --configuration Release --no-restore
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
